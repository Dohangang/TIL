/*
문제 설명:
약수의 개수가 세 개 이상인 수를 합성수라고 합니다. 
자연수 n이 매개변수로 주어질 때 n이하의 합성수의 개수를 return하도록 solution 함수를 완성해주세요.


제한사항:
📌 1 ≤ n ≤ 100
*/

const numberOfCompositeNumber = {
  1: 0,
  2: 0,
  3: 0,
  4: 1,
  5: 1,
  6: 2,
  7: 2,
  8: 3,
  9: 4,
  10: 5,
  11: 5,
  12: 6,
  13: 6,
  14: 7,
  15: 8,
  16: 9,
  17: 9,
  18: 10,
  19: 10,
  20: 11,
  21: 12,
  22: 13,
  23: 13,
  24: 14,
  25: 15,
  26: 16,
  27: 17,
  28: 18,
  29: 18,
  30: 19,
  31: 19,
  32: 20,
  33: 21,
  34: 22,
  35: 23,
  36: 24,
  37: 24,
  38: 25,
  39: 26,
  40: 27,
  41: 27,
  42: 28,
  43: 28,
  44: 29,
  45: 30,
  46: 31,
  47: 31,
  48: 32,
  49: 33,
  50: 34,
  51: 35,
  52: 36,
  53: 36,
  54: 37,
  55: 38,
  56: 39,
  57: 40,
  58: 41,
  59: 41,
  60: 42,
  61: 42,
  62: 43,
  63: 44,
  64: 45,
  65: 46,
  66: 47,
  67: 47,
  68: 48,
  69: 49,
  70: 50,
  71: 50,
  72: 51,
  73: 51,
  74: 52,
  75: 53,
  76: 54,
  77: 55,
  78: 56,
  79: 56,
  80: 57,
  81: 58,
  82: 59,
  83: 59,
  84: 60,
  85: 61,
  86: 62,
  87: 63,
  88: 64,
  89: 64,
  90: 65,
  91: 66,
  92: 67,
  93: 68,
  94: 69,
  95: 70,
  96: 71,
  97: 71,
  98: 72,
  99: 73,
  100: 74,
};

function solution(n) {
  return numberOfCompositeNumber[n];
}

// function solution(n) {
//   let answer = 0;
//   for (let i = 1; i <= n; i++) {
//       let count = 0;
//       for (let j = 1; j <= i; j++) {
//           if (i % j === 0) {
//               count++;
//           }
//       }
//       if (count >= 3) answer++;
//   }
//   return answer;
// }

// 범위가 1에서 100까지라면 매번 계산 하는 것보다 효율적이라고 생각
